{"version":3,"file":"quizgame.min.js","sources":["../src/quizgame.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This class manages the confirmation pop-up (also called the pre-flight check)\n * that is sometimes shown when a use clicks the start attempt button.\n *\n * This is also responsible for opening the pop-up window, if the quiz requires to be in one.\n *\n * @module    mod_quizgame/quizgame\n * @class     quizgame\n * @copyright 2016 John Okely <john@moodle.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/yui', 'core/notification', 'core/ajax'], function($, Y, notification, ajax) {\n    var questions;\n    var quizgame;\n    var stage;\n    var score = 0;\n    var particles = [];\n    var gameObjects = [];\n    var images = [\n        'pix/icon.gif',\n        'pix/planet.png',\n        'pix/ship.png',\n        'pix/enemy.png',\n        'pix/enemystem.png',\n        'pix/enemychoice.png',\n        'pix/enemystemselected.png',\n        'pix/enemychoiceselected.png',\n        'pix/laser.png',\n        'pix/enemylaser.png'\n    ];\n    var imagesLoaded = 0;\n    var loaded = false;\n    var player;\n    var planet;\n    var level = -1;\n    var displayRect = {x: 0, y: 0, width: 0, height: 0};\n    var question = \"\";\n    var interval;\n    var enemySpeed;\n    var touchDown = false;\n    var mouseDown = false;\n    var currentTeam = [];\n    var lastShot = 0;\n    var currentPointsLeft = 0;\n    var context;\n    var inFullscreen = false;\n\n    $('#mod_quizgame_fullscreen_button').on('click', function() {\n        if (inFullscreen) {\n            inFullscreen = false;\n            smallscreen();\n        } else {\n            fullscreen();\n        }\n    });\n\n    /**\n     * Play sound effect\n     * @param {string} soundName\n     */\n    function playSound(soundName) {\n        if (document.getElementById(\"mod_quizgame_sound_on\").checked) {\n            var soundElement = document.getElementById(\"mod_quizgame_sound_\" + soundName);\n            soundElement.currentTime = 0;\n            soundElement.play();\n        }\n    }\n\n    /**\n     * Adjust for small screens.\n     */\n    function smallscreen() {\n        inFullscreen = false;\n        stage.removeAttribute(\"width\");\n        stage.removeAttribute(\"height\");\n        stage.removeAttribute(\"style\");\n\n        stage.classList.remove(\"floating-game-canvas\");\n        $(\"#button_container\").removeClass(\"floating-button-container fixed-bottom\");\n\n        displayRect.width = stage.clientWidth;\n        displayRect.height = stage.clientHeight;\n        stage.style.width = displayRect.width;\n        stage.style.height = displayRect.height;\n\n        sizeScreen(stage);\n    }\n\n    /**\n     * Adjust screen size (switch between modes).\n     */\n    function fschange() {\n        if (inFullscreen) {\n            smallscreen();\n        }\n    }\n\n    /**\n     * Expand to full screen.\n     */\n    function fullscreen() {\n        var landscape = window.matchMedia(\"(orientation: landscape)\").matches;\n\n        if (stage.requestFullscreen) {\n              stage.requestFullscreen();\n        } else if (stage.msRequestFullscreen) {\n              stage.msRequestFullscreen();\n        } else if (stage.mozRequestFullScreen) {\n              stage.mozRequestFullScreen();\n        }\n        // The stage.webkitRequestFullscreen() method was removed, due to very easily exiting of full screen in iOS,\n        // along with browser messages asking if you are typing in fullscreen.\n\n        inFullscreen = true;\n        var buttonContainer = $(\"#button_container\");\n\n        var width = window.innerWidth;\n\n        // The window.innerHeight returns an offset value on iOS devices in safari only\n        // while in portrait mode for some reason.\n        var height = $(window).height();\n\n        // Switch width and height\n        if (landscape && width < height) {\n            height = [width, width = height][0];\n        }\n\n        // Gets the actual button container height, then adds 16px; 8px on the\n        // top and 8px on the bottom for the page margin.\n        height -= buttonContainer.height() + 16;\n\n        displayRect.width = width;\n        displayRect.height = height;\n\n        stage.style.width = width + \"px\";\n        stage.style.height = height + \"px\";\n\n        // Makes the canvas float.\n        stage.classList.add(\"floating-game-canvas\");\n\n        // This makes the button container float below the game canvas.\n        buttonContainer.addClass(\"floating-button-container fixed-bottom\");\n\n        $(\"#mod_quizgame_fullscreen_button\").blur(); // The button pressed was still focused, so a blur is necessary.\n\n        sizeScreen(stage);\n    }\n\n    /**\n     * Adjust screen size based on browser window.\n     * @param {object} stage\n     */\n    function sizeScreen(stage) {\n\n        stage.width = displayRect.width;\n        stage.height = displayRect.height;\n        context.imageSmoothingEnabled = false;\n    }\n\n    /**\n     * Helper function for when the screen size chages due to rotating on mobile.\n     */\n    function orientationChange() {\n        if (inFullscreen) {\n            fullscreen();\n        } else {\n            smallscreen();\n        }\n    }\n\n    /**\n     * Helper function to clear all events.\n     */\n    function clearEvents() {\n        document.onkeydown = null;\n        document.onkeyup = null;\n        document.onmousedown = null;\n        document.onmouseup = null;\n        document.onmousemove = null;\n        document.ontouchstart = null;\n        document.ontouchend = null;\n        document.ontouchmove = null;\n        window.onresize = null;\n    }\n\n    /**\n     * Helper function to handle JS Events.\n     */\n    function menuEvents() {\n        clearEvents();\n        document.onkeydown = menukeydown;\n        document.onmouseup = menumousedown;\n        document.ontouchend = menutouchend;\n        window.onresize = orientationChange;\n    }\n\n    /**\n     * Helper function to display game start screen\n     */\n    function showMenu() {\n\n        context.clearRect(0, 0, displayRect.width, displayRect.height);\n\n        context.fillStyle = '#FFFFFF';\n        context.font = \"18px Audiowide\";\n        context.textAlign = 'center';\n\n        if (questions !== null && questions.length > 0) {\n            context.fillText(M.util.get_string('spacetostart', 'mod_quizgame'), displayRect.width / 2, displayRect.height / 2);\n            menuEvents();\n        } else {\n            context.fillText(M.util.get_string('emptyquiz', 'mod_quizgame'), displayRect.width / 2, displayRect.height / 2);\n        }\n    }\n\n    /**\n     * Helper function to load game objects\n     */\n    function loadGame() {\n\n        shuffle(questions);\n\n        if (!loaded) {\n            images.forEach(function(src) {\n                var image = new Image();\n                image.src = src;\n                image.onload = function() {\n                    imagesLoaded++;\n                    if (imagesLoaded >= images.length) {\n                        gameLoaded();\n                    }\n                };\n            });\n            loaded = true;\n        } else {\n            startGame();\n        }\n    }\n\n    /**\n     * Helper function process game-over.\n     */\n    function endGame() {\n        ajax.call([{\n            methodname: 'mod_quizgame_update_score',\n            args: {quizgameid: quizgame, score: Math.trunc(score)},\n            fail: notification.exception\n        }]);\n        menuEvents();\n    }\n\n    /**\n     * Helper function process game ready.\n     */\n    function gameLoaded() {\n\n        clearInterval(interval);\n\n        interval = setInterval(function() {\n                draw(context, displayRect, gameObjects, particles, question);\n                update(displayRect, gameObjects, particles);\n        }, 40);\n\n        startGame();\n    }\n\n    /**\n     * Helper function process game start.\n     */\n    function startGame() {\n\n        score = 0;\n        gameObjects = [];\n        particles = [];\n        level = -1;\n        enemySpeed = 0.5;\n        touchDown = false;\n        mouseDown = false;\n\n        // Queue & trigger the game_started event.\n        ajax.call([{\n            methodname: 'mod_quizgame_start_game',\n            args: {quizgameid: quizgame},\n            fail: notification.exception\n        }]);\n\n        player = new Player(\"pix/ship.png\", 0, 0);\n        player.x = displayRect.width / 2;\n        player.y = displayRect.height / 2;\n        gameObjects.push(player);\n\n        planet = new Planet(\"pix/planet.png\", 0, 0);\n        planet.image.width = displayRect.width;\n        planet.image.height = displayRect.height;\n        planet.direction.y = 1;\n        planet.movespeed.y = 0.7;\n        particles.push(planet);\n\n        nextLevel();\n\n        document.onkeyup = keyup;\n        document.onkeydown = keydown;\n        document.onmouseup = mouseup;\n        document.onmousedown = mousedown;\n        document.onmousemove = mousemove;\n        document.ontouchstart = touchstart;\n        document.ontouchend = touchend;\n        document.ontouchmove = touchmove;\n        window.onresize = orientationChange;\n\n        document.addEventListener(\"gesturestart\", cancelled, false);\n        document.addEventListener(\"gesturechange\", cancelled, false);\n        document.addEventListener(\"gestureend\", cancelled, false);\n    }\n\n    /**\n     * Helper function process next level (question).\n     */\n    function nextLevel() {\n        level++;\n        if (level >= questions.length) {\n            level = 0;\n            enemySpeed *= 1.3;\n        }\n        question = runLevel(questions, level, displayRect);\n    }\n\n    /**\n     * Helper function process current level.\n     * @param {array} questions\n     * @param {object} level\n     * @param {object} bounds\n     * @returns {string}\n     */\n    function runLevel(questions, level, bounds) {\n        currentTeam = [];\n        lastShot = 0;\n        currentPointsLeft = 0;\n\n        if (questions[level].type == 'truefalse') {\n            questions[level].answers.forEach(function(answer) {\n                var enemy = new TFEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                                           answer.text, answer.fraction);\n                currentTeam.push(enemy);\n                gameObjects.push(enemy);\n            });\n            currentPointsLeft = 0; // This is unused by TrueFalse questions.\n        } else if (questions[level].type == 'multichoice') {\n            questions[level].answers.forEach(function(answer) {\n                var enemy = new MultiEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                                           answer.text, answer.fraction, questions[level].single);\n                if (answer.fraction < 1) {\n                    currentTeam.push(enemy);\n                    if (answer.fraction > 0) {\n                        currentPointsLeft += parseFloat(answer.fraction);\n                    }\n                }\n                gameObjects.push(enemy);\n            });\n        } else if (questions[level].type == 'match') {\n            var i = 0;\n            var fraction = 1 / (questions[level].stems.length * 2);\n            currentPointsLeft += 1;\n            questions[level].stems.forEach(function(stem) {\n                i++;\n                var question = new MatchEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                                              stem.question, fraction, -i, true);\n                var answer = new MatchEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                                            stem.answer, fraction, i);\n                currentTeam.push(question);\n                currentTeam.push(answer);\n                gameObjects.push(question);\n                gameObjects.push(answer);\n            });\n        }\n        return questions[level].question;\n    }\n\n    /**\n     * Helper function to place text on screen\n     * @param {object} context\n     * @param {object} displayRect\n     * @param {objectc} objects\n     * @param {object} particles\n     * @param {string} question\n     */\n    function draw(context, displayRect, objects, particles, question) {\n        context.clearRect(0, 0, displayRect.width, displayRect.height);\n        var i = 0;\n        for (i = 0; i < particles.length; i++) {\n            particles[i].draw(context);\n        }\n\n        for (i = 0; i < objects.length; i++) {\n            objects[i].draw(context);\n        }\n\n        if (player.alive) {\n            context.fillStyle = '#FFFFFF';\n            context.font = \"18px Audiowide\";\n            context.textAlign = 'left';\n            context.fillText(M.util.get_string('score', 'mod_quizgame',\n                                               {\n                                                    \"score\": Math.round(score), \"lives\": player.lives\n                                               }),\n                                               5, displayRect.height - 20);\n            context.textAlign = 'center';\n\n            wrapText(context, question, false, 20, displayRect.width * 0.9, displayRect.width / 2, 20);\n        } else {\n            context.fillStyle = '#FFFFFF';\n            context.font = \"18px Audiowide\";\n            context.textAlign = 'center';\n            context.fillText(M.util.get_string('endofgame', 'mod_quizgame',\n                                               Math.round(player.lastScore)),\n                                               displayRect.width / 2, displayRect.height / 2);\n        }\n    }\n\n    /**\n     * Helper function main game logic: process movements and behaviours of game objects\n     * @param {object} bounds\n     * @param {object} objects\n     * @param {object} particles\n     */\n    function update(bounds, objects, particles) {\n        var i = 0;\n        for (i = 0; i < 3; i++) {\n            particles.push(new Star(bounds));\n        }\n        for (i = 0; i < particles.length; i++) {\n            particles[i].update(bounds);\n            if (!particles[i].alive) {\n                particles.splice(i, 1);\n                i--;\n            }\n        }\n        for (i = 0; i < objects.length; i++) {\n            objects[i].update(bounds);\n            for (var j = i + 1; j < objects.length; j++) {\n                collide(objects[i], objects[j]);\n            }\n            if (!objects[i].alive) {\n                objects.splice(i, 1);\n                i--;\n            }\n        }\n    }\n\n    /**\n     * Constructor for storing information about a rectangle shape\n     * @param {int} left\n     * @param {int} top\n     * @param {int} width\n     * @param {int} height\n     */\n    function Rectangle(left, top, width, height) {\n        this.left = left || 0;\n        this.top = top || 0;\n        this.width = width || 0;\n        this.height = height || 0;\n    }\n\n    Rectangle.prototype.right = function() {\n        return this.left + this.width;\n    };\n\n    Rectangle.prototype.bottom = function() {\n        return this.top + this.height;\n    };\n\n    Rectangle.prototype.Contains = function(point) {\n        return point.x > this.left &&\n            point.x < this.right() &&\n            point.y > this.top &&\n            point.y < this.bottom();\n    };\n\n    Rectangle.prototype.Intersect = function(rectangle) {\n        var retval = !(rectangle.left > this.right() ||\n            rectangle.right() < this.left ||\n            rectangle.top > this.bottom() ||\n            rectangle.bottom() < this.top);\n        return retval;\n    };\n\n    /**\n     * Generate Game Object.\n     * @param {text} src\n     * @param {int} x\n     * @param {int} y\n     */\n    function GameObject(src, x, y) {\n        if (src !== null) {\n            this.image = this.loadImage(src);\n        }\n        this.x = x;\n        this.y = y;\n        this.velocity = {x: 0, y: 0};\n        this.direction = {x: 0, y: 0};\n        this.movespeed = {x: 5, y: 3};\n        this.alive = true;\n        this.decay = 0.7;\n    }\n\n    GameObject.prototype.loadImage = function(src) {\n        if (!this.image) {\n            this.image = new Image();\n        }\n        this.image.src = src;\n        return this.image;\n    };\n\n    GameObject.prototype.update = function() {\n        this.velocity.x += this.direction.x * this.movespeed.x;\n        this.velocity.y += this.direction.y * this.movespeed.y;\n        this.x += this.velocity.x;\n        this.y += this.velocity.y;\n        this.velocity.y *= this.decay;\n        this.velocity.x *= this.decay;\n    };\n\n    GameObject.prototype.draw = function(context) {\n        context.drawImage(this.image, this.x, this.y, this.image.width, this.image.height);\n    };\n\n    GameObject.prototype.getRect = function() {\n        return new Rectangle(this.x, this.y, this.image.width, this.image.height);\n    };\n\n    GameObject.prototype.die = function() {\n        this.alive = false;\n    };\n\n    /**\n     * Constructor for Player class, all the information about the player\n     * @param {string} src\n     * @param {int} x\n     * @param {int} y\n     */\n    function Player(src, x, y) {\n        GameObject.call(this, src, x, y);\n        this.mouse = {x: 0, y: 0};\n        this.movespeed = {x: 6, y: 4};\n        this.lives = 3;\n        this.lastScore = 0;\n    }\n\n    Player.prototype = Object.create(GameObject.prototype);\n    Player.prototype.update = function(bounds) {\n        if (mouseDown || touchDown) {\n            if (this.x < this.mouse.x - (this.image.width)) {\n                player.direction.x = 1;\n            } else if (this.x > this.mouse.x) {\n                player.direction.x = -1;\n            } else {\n                player.direction.x = 0;\n            }\n            if (this.y < this.mouse.y - (this.image.height)) {\n                player.direction.y = 1;\n            } else if (this.y > this.mouse.y) {\n                player.direction.y = -1;\n            } else {\n                player.direction.y = 0;\n            }\n        }\n        GameObject.prototype.update.call(this, bounds);\n        if (this.x < bounds.x - this.image.width) {\n            this.x = bounds.width;\n        } else if (this.x > bounds.width) {\n            this.x = bounds.x - this.image.width;\n        }\n        if (this.y < bounds.y) {\n            this.y = bounds.y;\n        } else if (this.y > bounds.height - this.image.height) {\n            this.y = bounds.height - this.image.height;\n        }\n    };\n\n    Player.prototype.Shoot = function() {\n        playSound(\"laser\");\n        gameObjects.unshift(new Laser(player.x, player.y, true, 24));\n        canShoot = false;\n    };\n\n    Player.prototype.die = function() {\n        GameObject.prototype.die.call(this);\n        playSound(\"explosion\");\n        spray(this.x + this.image.width / 2, this.y + this.image.height / 2, 200, \"#FFCC00\");\n        this.lastScore = score;\n        endGame();\n    };\n\n    Player.prototype.gotShot = function(shot) {\n        if (shot.alive) {\n            if (this.lives <= 1) {\n                this.die();\n            } else {\n                this.lives--;\n                spray(this.x + this.image.width / 2, this.y + this.image.height / 2, 100, \"#FFCC00\");\n            }\n        }\n    };\n\n    /**\n     * Constructor for Planet (background objects) extends GameObject\n     * @param {string} src\n     * @param {int} x\n     * @param {int} y\n     */\n    function Planet(src, x, y) {\n        GameObject.call(this, src, x, y);\n    }\n\n    Planet.prototype = Object.create(GameObject.prototype);\n    Planet.prototype.update = function(bounds) {\n        planet.image.width = displayRect.width;\n        planet.image.height = displayRect.height;\n        GameObject.prototype.update.call(this, bounds);\n    };\n\n    /**\n     * Constructor for enemy craft (answers) extends GameObject\n     * @param {string} src\n     * @param {int} x\n     * @param {int} y\n     * @param {string} text\n     * @param {float} fraction\n     */\n    function Enemy(src, x, y, text, fraction) {\n        GameObject.call(this, src, x, y);\n        this.xspeed = enemySpeed;\n        this.yspeed = enemySpeed * (2 + Math.random()) / 4;\n        this.movespeed.x = 0;\n        this.movespeed.y = 0;\n        this.direction.y = 1;\n        this.text = text;\n        this.fraction = fraction;\n        this.movementClock = 0;\n        this.shotFrequency = 80;\n        this.shotClock = (1 + Math.random()) * this.shotFrequency;\n        this.level = level;\n    }\n\n    Enemy.prototype = Object.create(GameObject.prototype);\n\n    Enemy.prototype.update = function(bounds) {\n\n        if (this.y < bounds.height / 10 || this.y > bounds.height * 9 / 10) {\n            this.movespeed.x = this.xspeed * 1;\n            this.movespeed.y = this.yspeed * 5;\n        } else {\n            this.movespeed.x = this.xspeed;\n            this.movespeed.y = this.yspeed;\n        }\n\n        GameObject.prototype.update.call(this, bounds);\n\n        this.movementClock--;\n\n        if (this.movementClock <= 0) {\n            this.direction.x = Math.floor(Math.random() * 3) - 1;\n            this.movementClock = (2 + Math.random()) * 30;\n        }\n\n        this.shotClock -= enemySpeed;\n\n        if (this.shotClock <= 0) {\n            if (this.y < bounds.height * 0.6) {\n                playSound(\"enemylaser\");\n                var laser = new Laser(this.x, this.y);\n                laser.direction.y = 1;\n                laser.friendly = false;\n                gameObjects.unshift(laser);\n                this.shotClock = (1 + Math.random()) * this.shotFrequency;\n            }\n        }\n\n        if (this.x < bounds.x - this.image.width) {\n            this.x = bounds.width;\n        } else if (this.x > bounds.width) {\n            this.x = bounds.x - this.image.width;\n        }\n        if (this.y > bounds.height + this.image.height && this.alive) {\n            this.alive = false;\n            if (this.fraction > 0) {\n                currentPointsLeft -= this.fraction;\n                score -= 1000 * this.fraction;\n            }\n\n            shipReachedEnd.call(this);\n        }\n    };\n\n    Enemy.prototype.draw = function(context) {\n        GameObject.prototype.draw.call(this, context);\n\n        context.fillStyle = '#FFFFFF';\n        context.font = \"15px Audiowide\";\n        context.textAlign = 'center';\n\n        wrapText(context, this.text, true, 17, displayRect.width * 0.2, this.x + this.image.width / 2, this.y - 5);\n    };\n\n    Enemy.prototype.die = function() {\n        GameObject.prototype.die.call(this);\n        spray(this.x + this.image.width, this.y + this.image.height, 50 + (this.fraction * 150), \"#FF0000\");\n\n        // Adjust Score.\n        score += this.fraction * 1000;\n\n        // Kill off the ship.\n        playSound(\"explosion\");\n    };\n\n    Enemy.prototype.gotShot = function(shot) {\n        // Default behaviour, to be overridden.\n        shot.die();\n        this.die();\n    };\n\n    /**\n     * Helper function to remove any stray ships on level advance\n     */\n    function killAllAlive() {\n        currentTeam.forEach(function(enemy) {\n            if (enemy.alive) {\n                // Make the fraction 0 so it won't count as anything and make a new level.\n                enemy.fraction = 0;\n                enemy.die();\n            }\n        });\n        currentTeam = [];\n    }\n\n    /**\n     * Helper function for True/False questions\n     * @param {int} x\n     * @param {int} y\n     * @param {string} text\n     * @param {float} fraction\n     */\n    function TFEnemy(x, y, text, fraction) {\n        Enemy.call(this, \"pix/enemy.png\", x, y, text, fraction);\n    }\n\n    TFEnemy.prototype = Object.create(Enemy.prototype);\n\n    TFEnemy.prototype.die = function() {\n        // TrueFalse questions are very simple, if either of the ships die, Enemy.prototype.die will handle\n        // the score adding of 1000 or 0, and then this will kill the other remaining ship.\n        Enemy.prototype.die.call(this);\n        killAllAlive();\n        // Only goes to the next level if the result is \"true\", as no matter what enemy dies first, the opposite will\n        // die immediately after.\n        if (this.fraction > 0) {\n            nextLevel();\n        }\n    };\n\n    TFEnemy.prototype.gotShot = function(shot) {\n        if (this.fraction > 0) {\n            shot.die();\n            this.die();\n        } else {\n            score += (this.fraction - 0.5) * 600;\n            shot.deflect();\n        }\n    };\n\n    /**\n     * Helper function for multiple choice questions (MCQ)\n     * @param {int} x\n     * @param {int} y\n     * @param {string} text\n     * @param {float} fraction\n     * @param {boolean} single\n     */\n    function MultiEnemy(x, y, text, fraction, single) {\n        Enemy.call(this, \"pix/enemy.png\", x, y, text, fraction);\n        this.single = single;\n    }\n\n    MultiEnemy.prototype = Object.create(Enemy.prototype);\n\n    MultiEnemy.prototype.die = function() {\n        Enemy.prototype.die.call(this);\n        if (this.fraction > 0) {\n            currentPointsLeft -= this.fraction;\n        }\n        if ((this.single && this.fraction === 1) && this.fraction >= 1 || (this.fraction > 0 && currentPointsLeft <= 0)) {\n            killAllAlive();\n            nextLevel();\n        }\n    };\n\n    MultiEnemy.prototype.gotShot = function(shot) {\n        if (this.fraction >= 1 || (this.fraction > 0 && !this.single)) {\n            shot.die();\n            this.die();\n        } else {\n            score += (this.fraction - 0.5) * 600;\n            shot.deflect();\n        }\n    };\n\n    /**\n     * Helper function for matching questions\n     * @param {int} x\n     * @param {int} y\n     * @param {string} text\n     * @param {float} fraction\n     * @param {int} pairid\n     * @param {boolean} stem\n     */\n    function MatchEnemy(x, y, text, fraction, pairid, stem) {\n        this.stem = stem ? true : false;\n        if (this.stem) {\n            Enemy.call(this, \"pix/enemystem.png\", x, y, text, fraction);\n        } else {\n            Enemy.call(this, \"pix/enemychoice.png\", x, y, text, fraction);\n        }\n        this.pairid = pairid;\n        this.shotFrequency = 160;\n        this.hightlighted = false;\n    }\n\n    MatchEnemy.prototype = Object.create(Enemy.prototype);\n\n    MatchEnemy.prototype.die = function() {\n        currentPointsLeft -= this.fraction;\n        // Sets the fraction as 0 to stop it adding to the score in #die()\n        this.fraction = 0;\n        Enemy.prototype.die.call(this);\n    };\n\n    MatchEnemy.prototype.gotShot = function(shot) {\n        if (shot.alive && this.alive) {\n            if (lastShot == -this.pairid) {\n\n                // Increasing the score here instead of in #die(), due to rounding issues being a few numbers off.\n                // This must be done before because when #die is invoked, as it sets the fraction as 0.\n                score += this.fraction * 1000 * 2;\n\n                shot.die();\n                this.die();\n                var alives = 0;\n                currentTeam.forEach(function(match) {\n                    if (match.pairid == lastShot) {\n                        match.die();\n                    }\n                    if (match.alive) {\n                        alives++;\n                    }\n                });\n\n                if (alives <= 0) {\n                    nextLevel();\n                }\n            } else {\n                if (lastShot == this.pairid) {\n                    shot.deflect();\n                } else {\n                    shot.die();\n                    this.hightlight();\n                    lastShot = this.pairid;\n                }\n            }\n        }\n    };\n\n    MatchEnemy.prototype.hightlight = function() {\n        currentTeam.forEach(function(match) {\n            match.unhightlight();\n        });\n        if (this.stem) {\n            this.loadImage(\"pix/enemystemselected.png\");\n        } else {\n            this.loadImage(\"pix/enemychoiceselected.png\");\n        }\n        this.hightlighted = true;\n    };\n\n    MatchEnemy.prototype.unhightlight = function() {\n        if (this.hightlighted) {\n            if (this.stem) {\n                this.loadImage(\"pix/enemystem.png\");\n            } else {\n                this.loadImage(\"pix/enemychoice.png\");\n            }\n        }\n        this.hightlighted = false;\n    };\n\n    /**\n     * Constructor for laser shots extends GameObject\n     * @param {int} x\n     * @param {int} y\n     * @param {bool} friendly\n     * @param {float} laserSpeed\n     */\n    function Laser(x, y, friendly, laserSpeed) {\n        GameObject.call(this, friendly ? \"pix/laser.png\" : \"pix/enemylaser.png\", x, y);\n        this.direction.y = -1;\n        this.friendly = friendly ? 1 : 0;\n        this.laserSpeed = laserSpeed || 12;\n    }\n    Laser.prototype = Object.create(GameObject.prototype);\n\n    Laser.prototype.update = function(bounds) {\n        GameObject.prototype.update.call(this, bounds);\n        if (this.x < bounds.x - this.image.width ||\n            this.x > bounds.width ||\n            this.y < bounds.y - this.image.height ||\n            this.y > bounds.height) {\n            this.alive = false;\n        }\n        this.velocity.y = this.laserSpeed * this.direction.y;\n    };\n\n    Laser.prototype.deflect = function() {\n        this.image = this.loadImage(\"pix/enemylaser.png\");\n        this.direction.y *= -1;\n        this.friendly = !this.friendly;\n        playSound(\"deflect\");\n    };\n\n    /**\n     * Constructor for explosion particle effects extends GameObject\n     * @param {int} x\n     * @param {int} y\n     * @param {float} velocity\n     * @param {string} colour\n     */\n    function Particle(x, y, velocity, colour) {\n        GameObject.call(this, null, x, y);\n        this.width = 2;\n        this.height = 2;\n        this.velocity.x = velocity.x;\n        this.velocity.y = velocity.y;\n        this.aliveTime = 0;\n        this.colour = colour;\n        this.decay = 1;\n    }\n\n    Particle.prototype = Object.create(GameObject.prototype);\n\n    Particle.prototype.update = function(bounds) {\n        GameObject.prototype.update.call(this, bounds);\n        if (this.x < bounds.x - this.width ||\n            this.x > bounds.width ||\n            this.y < bounds.y - this.height ||\n            this.y > bounds.height) {\n            this.alive = false;\n        }\n        this.aliveTime++;\n        if (this.aliveTime > (Math.random() * 15) + 5) {\n            this.alive = false;\n        }\n    };\n\n    Particle.prototype.getRect = function() {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    };\n\n    Particle.prototype.draw = function(context) {\n        context.fillStyle = this.colour;\n        context.fillRect(this.x, this.y, this.width, this.height);\n        context.stroke();\n    };\n\n    /**\n     * Helper function for background stars extends GameObject\n     * @param {object} bounds\n     */\n    function Star(bounds) {\n        GameObject.call(this, null, Math.random() * bounds.width, 0);\n        this.width = 2;\n        this.height = 2;\n        this.direction.y = 1;\n        this.movespeed.y = 0.2 + (Math.random() / 2);\n        this.aliveTime = 0;\n    }\n    Star.prototype = Object.create(GameObject.prototype);\n\n    Star.prototype.update = function(bounds) {\n        GameObject.prototype.update.call(this, bounds);\n        if (this.y > bounds.height) {\n            this.alive = false;\n        }\n    };\n\n    Star.prototype.draw = function(context) {\n        context.fillStyle = '#9999AA';\n        context.fillRect(this.x, this.y, this.width, this.height);\n        context.stroke();\n    };\n\n    /**\n     * Helper function to handle collisions between gameobjects.\n     * @param {object} object1\n     * @param {object} object2\n     * @return {boolean}\n     */\n    function collide(object1, object2) {\n        return object1.alive && object2.alive && (collideOrdered(object1, object2) || collideOrdered(object2, object1));\n    }\n\n    /**\n     * Helper funcction to handle collisions.\n     * @param {object} object1\n     * @param {object} object2\n     * @returns {boolean}\n     */\n    function collideOrdered(object1, object2) {\n        if (object1 instanceof Laser && object2 instanceof Player) {\n            if (!object1.friendly && objectsIntersect(object1, object2)) {\n                object2.gotShot(object1);\n                object1.die();\n                return true;\n            }\n        }\n        if (object1 instanceof Laser && object2 instanceof Enemy) {\n            if (object1.friendly && objectsIntersect(object1, object2)) {\n                object2.gotShot(object1);\n                return true;\n            }\n        }\n        if (object1 instanceof Player && object2 instanceof Enemy) {\n            if (objectsIntersect(object1, object2)) {\n                object1.die();\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Helper function to handle intersections between GameObjects.\n     * @param {object} object1\n     * @param {object} object2\n     * @return {boolean}\n     */\n    function objectsIntersect(object1, object2) {\n        var rect1 = object1.getRect();\n        var rect2 = object2.getRect();\n        return rect1.Intersect(rect2);\n    }\n\n    /**\n     * Helper function for spraying particle (explosion) effects\n     * @param {int} x\n     * @param {int} y\n     * @param {int} num\n     * @param {string} colour\n     */\n    function spray(x, y, num, colour) {\n        for (var i = 0; i < num; i++) {\n            particles.push(new Particle(x, y, {x: (Math.random() - 0.5) * 16, y: ((Math.random() - 0.5) * 16) + 3}, colour));\n        }\n    }\n\n    /**\n     * Helper function to display answers.\n     * @param {object} context\n     * @param {string} input\n     * @param {bool} wrapUpwards\n     * @param {int} textHeight\n     * @param {int} maxLineWidth\n     * @param {int} x\n     * @param {int} y\n     */\n    function wrapText(context, input, wrapUpwards, textHeight, maxLineWidth, x, y) {\n        var drawLines = [];\n        var originalY = y;\n        var words = input.split(' ');\n        var line = '';\n\n        // Loops through the words, and preprocesses each line with the correct string value and y location.\n        words.forEach(function(word) {\n            var tempLine = line + ' ' + word;\n            var metrics = context.measureText(tempLine);\n            var testWidth = metrics.width;\n\n            // If the line with the new word is too long, then push the current line without the new word to drawLines.\n            if (testWidth > maxLineWidth) {\n                drawLines.push({\n                    text: line,\n                    y: y += textHeight\n                });\n\n                line = word;\n            } else {\n                // If it's shorted than the limit, just add the word to the line and move on.\n                line = tempLine;\n            }\n        });\n\n        // Push the last line, if it exists.\n        drawLines.push({\n            text: line,\n            y: y += textHeight\n        });\n\n        // The offset the text was created.\n        var yOffset = y - originalY;\n\n        drawLines.forEach(function(drawLine) {\n            // If it is suppose to wrap upwards (i.e. for enemy ships) it shifts all questions upwards the amount the\n            // questions go down.\n            var modifier = wrapUpwards ? -yOffset : 0;\n\n            context.fillText(drawLine.text, x, drawLine.y + modifier);\n        });\n    }\n\n    /**\n     * Helper function for end of level.\n     */\n    function shipReachedEnd() {\n        var amountLeft = currentTeam.filter(function(enemy) {\n            return enemy.alive;\n        }).length;\n\n        if (amountLeft === 0 && (currentPointsLeft < this.fraction || currentPointsLeft <= 0)\n            && this.level === level && player.alive) {\n            nextLevel();\n        }\n    }\n\n    // Input.\n\n    var canShoot = true;\n\n    /**\n     * Helper function for game menu from keyboard.\n     * @param {object} e\n     */\n    function menukeydown(e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {\n            e.preventDefault();\n            if (e.keyCode === 32) {\n                loadGame();\n            }\n        }\n    }\n\n    /**\n     * Helper function for game menu on mobile.\n     * @param {object} e\n     */\n    function menumousedown(e) {\n        if (e.target === stage) {\n            loadGame();\n        }\n    }\n\n    /**\n     * Helper function for game menu on mobile.\n     * @param {object} e\n     */\n    function menutouchend(e) {\n        if (e.target === stage) {\n            loadGame();\n        }\n    }\n\n    /**\n     * Helper function for keyboard movement.\n     * @param {object} e\n     */\n    function keydown(e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {\n            e.preventDefault();\n            if (e.keyCode === 32 && player.alive && canShoot) {\n                player.Shoot();\n            } else if (e.keyCode === 37) {\n                player.direction.x = -1;\n            } else if (e.keyCode === 38) {\n                player.direction.y = -1;\n            } else if (e.keyCode === 39) {\n                player.direction.x = 1;\n            } else if (e.keyCode === 40) {\n                player.direction.y = 1;\n            }\n        }\n    }\n\n    /**\n     * Helper function for keyboard movement.\n     * @param {object} e\n     */\n    function keyup(e) {\n        if (e.keyCode === 32) {\n            canShoot = true;\n        } else if ([37, 39].indexOf(e.keyCode) !== -1) {\n            player.direction.x = 0;\n        } else if ([38, 40].indexOf(e.keyCode) !== -1) {\n            player.direction.y = 0;\n        }\n    }\n\n    /**\n     * Helper function for mouse click (starts the player shooting if you clicked on them, moving if you didn't).\n     * @param {object} e\n     */\n    function mousedown(e) {\n        if (e.target === stage) {\n            var playerWasClicked = player.getRect().Contains({x: e.offsetX, y: e.offsetY});\n            if (playerWasClicked && player.alive) {\n                player.Shoot();\n            }\n            if (!mouseDown) {\n                player.mouse.x = e.offsetX;\n                player.mouse.y = e.offsetY;\n                mouseDown = true;\n            }\n        }\n    }\n\n    /**\n     * Helper function for mouse release. (stops the Player) for mouse mode\n     */\n    function mouseup() {\n        player.direction.x = 0;\n        player.direction.y = 0;\n        mouseDown = false;\n    }\n\n    /**\n     * Helper function for mouse movement.\n     * @param {object} e\n     */\n    function mousemove(e) {\n        player.mouse.x = e.offsetX;\n        player.mouse.y = e.offsetY;\n    }\n\n    /**\n     * Helper function for cancelled event.\n     * @param {object} event\n     */\n    function cancelled(event) {\n        if (event.target === stage) {\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    function touchstart(e) {\n        if (e.target === stage) {\n            if (player.alive && e.touches.length > 1) {\n                player.Shoot();\n            } else {\n                touchDown = true;\n                touchmove(e);\n            }\n\n            e.preventDefault();\n        }\n    }\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    function touchend(e) {\n        if (e.touches.length === 0) {\n            touchDown = false;\n        }\n        player.direction.x = 0;\n        player.direction.y = 0;\n\n        if (e.target === stage) {\n            e.preventDefault();\n        }\n    }\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    function touchmove(e) {\n        var rect = e.target.getBoundingClientRect();\n        // Required for getting the stage's relative touch position, due to a previous significant offset.\n        var x = e.touches[0].pageX - rect.left;\n        var y = e.touches[0].clientY - rect.top;\n\n        window.stage = stage;\n        player.mouse.x = x;\n        player.mouse.y = y;\n\n        if (e.target === stage) {\n            e.preventDefault();\n        }\n    }\n\n    /**\n     * Helper function to shuffle levels.\n     * @param {array} array\n     * @return {array}\n     */\n    function shuffle(array) {\n        var currentIndex = array.length;\n        var temporaryValue;\n        var randomIndex;\n\n        while (0 !== currentIndex) {\n\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    /**\n     * Initialization of the game.\n     * @param {array} q\n     * @param {array} qid\n     */\n    function doInitialize(q, qid) {\n        questions = q;\n        quizgame = qid;\n        if (document.addEventListener) {\n            document.addEventListener('fullscreenchange', fschange, false);\n            document.addEventListener('MSFullscreenChange', fschange, false);\n            document.addEventListener('mozfullscreenchange', fschange, false);\n            document.addEventListener('webkitfullscreenchange', fschange, false);\n        }\n        stage = document.getElementById(\"mod_quizgame_game\");\n        context = stage.getContext(\"2d\");\n        smallscreen();\n        interval = setInterval(function() {\n            showMenu();\n        }, 500);\n    }\n\n    return {\n        init: doInitialize,\n    };\n});\n"],"names":["define","$","Y","notification","ajax","questions","quizgame","stage","player","planet","interval","enemySpeed","context","score","particles","gameObjects","images","imagesLoaded","loaded","level","displayRect","x","y","width","height","question","touchDown","mouseDown","currentTeam","lastShot","currentPointsLeft","inFullscreen","playSound","soundName","document","getElementById","checked","soundElement","currentTime","play","smallscreen","removeAttribute","classList","remove","removeClass","clientWidth","clientHeight","style","sizeScreen","fschange","fullscreen","landscape","window","matchMedia","matches","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","buttonContainer","innerWidth","add","addClass","blur","imageSmoothingEnabled","orientationChange","menuEvents","onkeydown","onkeyup","onmousedown","onmouseup","onmousemove","ontouchstart","ontouchend","ontouchmove","onresize","menukeydown","menumousedown","menutouchend","loadGame","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","startGame","forEach","src","image","Image","onload","clearInterval","setInterval","objects","clearRect","i","draw","alive","fillStyle","font","textAlign","fillText","M","util","get_string","round","lives","wrapText","lastScore","bounds","push","Star","update","splice","j","collide","call","methodname","args","quizgameid","fail","exception","Player","Planet","direction","movespeed","nextLevel","keyup","keydown","mouseup","mousedown","mousemove","touchstart","touchend","touchmove","addEventListener","cancelled","type","answers","answer","enemy","TFEnemy","text","fraction","MultiEnemy","single","parseFloat","stems","stem","MatchEnemy","runLevel","Rectangle","left","top","GameObject","this","loadImage","velocity","decay","mouse","Enemy","xspeed","yspeed","movementClock","shotFrequency","shotClock","killAllAlive","die","pairid","hightlighted","Laser","friendly","laserSpeed","Particle","colour","aliveTime","object1","object2","collideOrdered","objectsIntersect","gotShot","rect1","getRect","rect2","Intersect","spray","num","input","wrapUpwards","textHeight","maxLineWidth","drawLines","originalY","words","split","line","word","tempLine","measureText","yOffset","drawLine","modifier","shipReachedEnd","filter","on","prototype","right","bottom","Contains","point","rectangle","drawImage","Object","create","Shoot","unshift","canShoot","trunc","shot","laser","deflect","alives","match","hightlight","unhightlight","fillRect","stroke","e","indexOf","keyCode","preventDefault","target","offsetX","offsetY","event","touches","rect","getBoundingClientRect","pageX","clientY","init","q","qid","getContext"],"mappings":";;;;;;;;;;;AA0BAA,+BAAO,CAAC,SAAU,WAAY,oBAAqB,cAAc,SAASC,EAAGC,EAAGC,aAAcC,UACtFC,UACAC,SACAC,MAkBAC,OACAC,OAIAC,SACAC,WAMAC,QA7BAC,MAAQ,EACRC,UAAY,GACZC,YAAc,GACdC,OAAS,CACT,eACA,iBACA,eACA,gBACA,oBACA,sBACA,4BACA,8BACA,gBACA,sBAEAC,aAAe,EACfC,QAAS,EAGTC,OAAS,EACTC,YAAc,CAACC,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAGC,OAAQ,GAC7CC,SAAW,GAGXC,WAAY,EACZC,WAAY,EACZC,YAAc,GACdC,SAAW,EACXC,kBAAoB,EAEpBC,cAAe,WAeVC,UAAUC,cACXC,SAASC,eAAe,yBAAyBC,QAAS,KACtDC,aAAeH,SAASC,eAAe,sBAAwBF,WACnEI,aAAaC,YAAc,EAC3BD,aAAaE,iBAOZC,cACLT,cAAe,EACfxB,MAAMkC,gBAAgB,SACtBlC,MAAMkC,gBAAgB,UACtBlC,MAAMkC,gBAAgB,SAEtBlC,MAAMmC,UAAUC,OAAO,wBACvB1C,EAAE,qBAAqB2C,YAAY,0CAEnCxB,YAAYG,MAAQhB,MAAMsC,YAC1BzB,YAAYI,OAASjB,MAAMuC,aAC3BvC,MAAMwC,MAAMxB,MAAQH,YAAYG,MAChChB,MAAMwC,MAAMvB,OAASJ,YAAYI,OAEjCwB,WAAWzC,gBAMN0C,WACDlB,cACAS,uBAOCU,iBACDC,UAAYC,OAAOC,WAAW,4BAA4BC,QAE1D/C,MAAMgD,kBACJhD,MAAMgD,oBACDhD,MAAMiD,oBACXjD,MAAMiD,sBACDjD,MAAMkD,sBACXlD,MAAMkD,uBAKZ1B,cAAe,MACX2B,gBAAkBzD,EAAE,qBAEpBsB,MAAQ6B,OAAOO,WAIfnC,OAASvB,EAAEmD,QAAQ5B,SAGnB2B,WAAa5B,MAAQC,SACrBA,OAAS,CAACD,MAAOA,MAAQC,QAAQ,IAKrCA,QAAUkC,gBAAgBlC,SAAW,GAErCJ,YAAYG,MAAQA,MACpBH,YAAYI,OAASA,OAErBjB,MAAMwC,MAAMxB,MAAQA,MAAQ,KAC5BhB,MAAMwC,MAAMvB,OAASA,OAAS,KAG9BjB,MAAMmC,UAAUkB,IAAI,wBAGpBF,gBAAgBG,SAAS,0CAEzB5D,EAAE,mCAAmC6D,OAErCd,WAAWzC,gBAONyC,WAAWzC,OAEhBA,MAAMgB,MAAQH,YAAYG,MAC1BhB,MAAMiB,OAASJ,YAAYI,OAC3BZ,QAAQmD,uBAAwB,WAM3BC,oBACDjC,aACAmB,aAEAV,uBAsBCyB,aAdL/B,SAASgC,UAAY,KACrBhC,SAASiC,QAAU,KACnBjC,SAASkC,YAAc,KACvBlC,SAASmC,UAAY,KACrBnC,SAASoC,YAAc,KACvBpC,SAASqC,aAAe,KACxBrC,SAASsC,WAAa,KACtBtC,SAASuC,YAAc,KACvBrB,OAAOsB,SAAW,KAQlBxC,SAASgC,UAAYS,YACrBzC,SAASmC,UAAYO,cACrB1C,SAASsC,WAAaK,aACtBzB,OAAOsB,SAAWV,2BAyBbc,qBA+jCQC,WAETC,eACAC,YAFAC,aAAeH,MAAMI,YAIlB,IAAMD,cAETD,YAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,cAGzCF,eAAiBD,MAFjBG,cAAgB,GAGhBH,MAAMG,cAAgBH,MAAME,aAC5BF,MAAME,aAAeD,eAzkCzBO,CAAQlF,WAEHa,OAaDsE,aAZAxE,OAAOyE,SAAQ,SAASC,SAChBC,MAAQ,IAAIC,MAChBD,MAAMD,IAAMA,IACZC,MAAME,OAAS,aACX5E,cACoBD,OAAOmE,SA4BvCW,cAAcpF,UAEdA,SAAWqF,aAAY,qBAgIbnF,QAASQ,YAAa4E,QAASlF,UAAWW,UACpDb,QAAQqF,UAAU,EAAG,EAAG7E,YAAYG,MAAOH,YAAYI,YACnD0E,EAAI,MACHA,EAAI,EAAGA,EAAIpF,UAAUqE,OAAQe,IAC9BpF,UAAUoF,GAAGC,KAAKvF,aAGjBsF,EAAI,EAAGA,EAAIF,QAAQb,OAAQe,IAC5BF,QAAQE,GAAGC,KAAKvF,SAGhBJ,OAAO4F,OACPxF,QAAQyF,UAAY,UACpBzF,QAAQ0F,KAAO,iBACf1F,QAAQ2F,UAAY,OACpB3F,QAAQ4F,SAASC,EAAEC,KAAKC,WAAW,QAAS,eACT,OACcvB,KAAKwB,MAAM/F,aAAiBL,OAAOqG,QAEjD,EAAGzF,YAAYI,OAAS,IAC3DZ,QAAQ2F,UAAY,SAEpBO,SAASlG,QAASa,UAAU,EAAO,GAAwB,GAApBL,YAAYG,MAAaH,YAAYG,MAAQ,EAAG,MAEvFX,QAAQyF,UAAY,UACpBzF,QAAQ0F,KAAO,iBACf1F,QAAQ2F,UAAY,SACpB3F,QAAQ4F,SAASC,EAAEC,KAAKC,WAAW,YAAa,eACbvB,KAAKwB,MAAMpG,OAAOuG,YAClB3F,YAAYG,MAAQ,EAAGH,YAAYI,OAAS,IA5J3E2E,CAAKvF,QAASQ,YAAaL,YAAaD,UAAWW,mBAsK/CuF,OAAQhB,QAASlF,eACzBoF,EAAI,MACHA,EAAI,EAAGA,EAAI,EAAGA,IACfpF,UAAUmG,KAAK,IAAIC,KAAKF,aAEvBd,EAAI,EAAGA,EAAIpF,UAAUqE,OAAQe,IAC9BpF,UAAUoF,GAAGiB,OAAOH,QACflG,UAAUoF,GAAGE,QACdtF,UAAUsG,OAAOlB,EAAG,GACpBA,SAGHA,EAAI,EAAGA,EAAIF,QAAQb,OAAQe,IAAK,CACjCF,QAAQE,GAAGiB,OAAOH,YACb,IAAIK,EAAInB,EAAI,EAAGmB,EAAIrB,QAAQb,OAAQkC,IACpCC,QAAQtB,QAAQE,GAAIF,QAAQqB,IAE3BrB,QAAQE,GAAGE,QACZJ,QAAQoB,OAAOlB,EAAG,GAClBA,MAxLAiB,CAAO/F,YAAaL,YAAaD,aACtC,IAEH0E,iBA9BItE,QAAS,YAoCRsE,YAEL3E,MAAQ,EACRE,YAAc,GACdD,UAAY,GACZK,OAAS,EACTR,WAAa,GACbe,WAAY,EACZC,WAAY,EAGZvB,KAAKmH,KAAK,CAAC,CACPC,WAAY,0BACZC,KAAM,CAACC,WAAYpH,UACnBqH,KAAMxH,aAAayH,cAGvBpH,OAAS,IAAIqH,OAAO,eAAgB,EAAG,IAChCxG,EAAID,YAAYG,MAAQ,EAC/Bf,OAAOc,EAAIF,YAAYI,OAAS,EAChCT,YAAYkG,KAAKzG,SAEjBC,OAAS,IAAIqH,OAAO,iBAAkB,EAAG,IAClCnC,MAAMpE,MAAQH,YAAYG,MACjCd,OAAOkF,MAAMnE,OAASJ,YAAYI,OAClCf,OAAOsH,UAAUzG,EAAI,EACrBb,OAAOuH,UAAU1G,EAAI,GACrBR,UAAUmG,KAAKxG,QAEfwH,YAEA/F,SAASiC,QAAU+D,MACnBhG,SAASgC,UAAYiE,QACrBjG,SAASmC,UAAY+D,QACrBlG,SAASkC,YAAciE,UACvBnG,SAASoC,YAAcgE,UACvBpG,SAASqC,aAAegE,WACxBrG,SAASsC,WAAagE,SACtBtG,SAASuC,YAAcgE,UACvBrF,OAAOsB,SAAWV,kBAElB9B,SAASwG,iBAAiB,eAAgBC,WAAW,GACrDzG,SAASwG,iBAAiB,gBAAiBC,WAAW,GACtDzG,SAASwG,iBAAiB,aAAcC,WAAW,YAM9CV,cACL9G,OACad,UAAU8E,SACnBhE,MAAQ,EACRR,YAAc,KAElBc,kBAUcpB,UAAWc,MAAO6F,WAChCpF,YAAc,GACdC,SAAW,EACXC,kBAAoB,EAES,aAAzBzB,UAAUc,OAAOyH,KACjBvI,UAAUc,OAAO0H,QAAQpD,SAAQ,SAASqD,YAClCC,MAAQ,IAAIC,QAAQ5D,KAAKE,SAAW0B,OAAOzF,OAAQ6D,KAAKE,SAAW0B,OAAOxF,OAAS,EAC5DsH,OAAOG,KAAMH,OAAOI,UAC/CtH,YAAYqF,KAAK8B,OACjBhI,YAAYkG,KAAK8B,UAErBjH,kBAAoB,OACjB,GAA6B,eAAzBzB,UAAUc,OAAOyH,KACxBvI,UAAUc,OAAO0H,QAAQpD,SAAQ,SAASqD,YAClCC,MAAQ,IAAII,WAAW/D,KAAKE,SAAW0B,OAAOzF,OAAQ6D,KAAKE,SAAW0B,OAAOxF,OAAS,EAC/DsH,OAAOG,KAAMH,OAAOI,SAAU7I,UAAUc,OAAOiI,QACtEN,OAAOI,SAAW,IAClBtH,YAAYqF,KAAK8B,OACbD,OAAOI,SAAW,IAClBpH,mBAAqBuH,WAAWP,OAAOI,YAG/CnI,YAAYkG,KAAK8B,eAElB,GAA6B,SAAzB1I,UAAUc,OAAOyH,KAAiB,KACrC1C,EAAI,EACJgD,SAAW,GAAqC,EAAhC7I,UAAUc,OAAOmI,MAAMnE,QAC3CrD,mBAAqB,EACrBzB,UAAUc,OAAOmI,MAAM7D,SAAQ,SAAS8D,MACpCrD,QACIzE,SAAW,IAAI+H,WAAWpE,KAAKE,SAAW0B,OAAOzF,OAAQ6D,KAAKE,SAAW0B,OAAOxF,OAAS,EAC/D+H,KAAK9H,SAAUyH,UAAWhD,GAAG,GACvD4C,OAAS,IAAIU,WAAWpE,KAAKE,SAAW0B,OAAOzF,OAAQ6D,KAAKE,SAAW0B,OAAOxF,OAAS,EAC/D+H,KAAKT,OAAQI,SAAUhD,GACnDtE,YAAYqF,KAAKxF,UACjBG,YAAYqF,KAAK6B,QACjB/H,YAAYkG,KAAKxF,UACjBV,YAAYkG,KAAK6B,kBAGlBzI,UAAUc,OAAOM,SAnDbgI,CAASpJ,UAAWc,MAAOC,sBAoIjCsI,UAAUC,KAAMC,IAAKrI,MAAOC,aAC5BmI,KAAOA,MAAQ,OACfC,IAAMA,KAAO,OACbrI,MAAQA,OAAS,OACjBC,OAASA,QAAU,WAgCnBqI,WAAWnE,IAAKrE,EAAGC,GACZ,OAARoE,WACKC,MAAQmE,KAAKC,UAAUrE,WAE3BrE,EAAIA,OACJC,EAAIA,OACJ0I,SAAW,CAAC3I,EAAG,EAAGC,EAAG,QACrByG,UAAY,CAAC1G,EAAG,EAAGC,EAAG,QACtB0G,UAAY,CAAC3G,EAAG,EAAGC,EAAG,QACtB8E,OAAQ,OACR6D,MAAQ,YAsCRpC,OAAOnC,IAAKrE,EAAGC,GACpBuI,WAAWtC,KAAKuC,KAAMpE,IAAKrE,EAAGC,QACzB4I,MAAQ,CAAC7I,EAAG,EAAGC,EAAG,QAClB0G,UAAY,CAAC3G,EAAG,EAAGC,EAAG,QACtBuF,MAAQ,OACRE,UAAY,WAiEZe,OAAOpC,IAAKrE,EAAGC,GACpBuI,WAAWtC,KAAKuC,KAAMpE,IAAKrE,EAAGC,YAkBzB6I,MAAMzE,IAAKrE,EAAGC,EAAG2H,KAAMC,UAC5BW,WAAWtC,KAAKuC,KAAMpE,IAAKrE,EAAGC,QACzB8I,OAASzJ,gBACT0J,OAAS1J,YAAc,EAAIyE,KAAKE,UAAY,OAC5C0C,UAAU3G,EAAI,OACd2G,UAAU1G,EAAI,OACdyG,UAAUzG,EAAI,OACd2H,KAAOA,UACPC,SAAWA,cACXoB,cAAgB,OAChBC,cAAgB,QAChBC,WAAa,EAAIpF,KAAKE,UAAYwE,KAAKS,mBACvCpJ,MAAQA,eAmFRsJ,eACL7I,YAAY6D,SAAQ,SAASsD,OACrBA,MAAM3C,QAEN2C,MAAMG,SAAW,EACjBH,MAAM2B,UAGd9I,YAAc,YAUToH,QAAQ3H,EAAGC,EAAG2H,KAAMC,UACzBiB,MAAM5C,KAAKuC,KAAM,gBAAiBzI,EAAGC,EAAG2H,KAAMC,mBAmCzCC,WAAW9H,EAAGC,EAAG2H,KAAMC,SAAUE,QACtCe,MAAM5C,KAAKuC,KAAM,gBAAiBzI,EAAGC,EAAG2H,KAAMC,eACzCE,OAASA,gBAmCTI,WAAWnI,EAAGC,EAAG2H,KAAMC,SAAUyB,OAAQpB,WACzCA,OAAOA,KACRO,KAAKP,KACLY,MAAM5C,KAAKuC,KAAM,oBAAqBzI,EAAGC,EAAG2H,KAAMC,UAElDiB,MAAM5C,KAAKuC,KAAM,sBAAuBzI,EAAGC,EAAG2H,KAAMC,eAEnDyB,OAASA,YACTJ,cAAgB,SAChBK,cAAe,WA6EfC,MAAMxJ,EAAGC,EAAGwJ,SAAUC,YAC3BlB,WAAWtC,KAAKuC,KAAMgB,SAAW,gBAAkB,qBAAsBzJ,EAAGC,QACvEyG,UAAUzG,GAAK,OACfwJ,SAAWA,SAAW,EAAI,OAC1BC,WAAaA,YAAc,YA6B3BC,SAAS3J,EAAGC,EAAG0I,SAAUiB,QAC9BpB,WAAWtC,KAAKuC,KAAM,KAAMzI,EAAGC,QAC1BC,MAAQ,OACRC,OAAS,OACTwI,SAAS3I,EAAI2I,SAAS3I,OACtB2I,SAAS1I,EAAI0I,SAAS1I,OACtB4J,UAAY,OACZD,OAASA,YACThB,MAAQ,WAiCR/C,KAAKF,QACV6C,WAAWtC,KAAKuC,KAAM,KAAM1E,KAAKE,SAAW0B,OAAOzF,MAAO,QACrDA,MAAQ,OACRC,OAAS,OACTuG,UAAUzG,EAAI,OACd0G,UAAU1G,EAAI,GAAO8D,KAAKE,SAAW,OACrC4F,UAAY,WAuBZ5D,QAAQ6D,QAASC,gBACfD,QAAQ/E,OAASgF,QAAQhF,QAAUiF,eAAeF,QAASC,UAAYC,eAAeD,QAASD,mBASjGE,eAAeF,QAASC,gBACzBD,mBAAmBN,OAASO,mBAAmBvD,SAC1CsD,QAAQL,UAAYQ,iBAAiBH,QAASC,UAC/CA,QAAQG,QAAQJ,SAChBA,QAAQT,OACD,GAGXS,mBAAmBN,OAASO,mBAAmBjB,OAC3CgB,QAAQL,UAAYQ,iBAAiBH,QAASC,UAC9CA,QAAQG,QAAQJ,UACT,MAGXA,mBAAmBtD,QAAUuD,mBAAmBjB,OAC5CmB,iBAAiBH,QAASC,YAC1BD,QAAQT,OACD,YAYVY,iBAAiBH,QAASC,aAC3BI,MAAQL,QAAQM,UAChBC,MAAQN,QAAQK,iBACbD,MAAMG,UAAUD,gBAUlBE,MAAMvK,EAAGC,EAAGuK,IAAKZ,YACjB,IAAI/E,EAAI,EAAGA,EAAI2F,IAAK3F,IACrBpF,UAAUmG,KAAK,IAAI+D,SAAS3J,EAAGC,EAAG,CAACD,EAA2B,IAAvB+D,KAAKE,SAAW,IAAWhE,EAA4B,IAAvB8D,KAAKE,SAAW,IAAa,GAAI2F,kBAcvGnE,SAASlG,QAASkL,MAAOC,YAAaC,WAAYC,aAAc5K,EAAGC,OACpE4K,UAAY,GACZC,UAAY7K,EACZ8K,MAAQN,MAAMO,MAAM,KACpBC,KAAO,GAGXF,MAAM3G,SAAQ,SAAS8G,UACfC,SAAWF,KAAO,IAAMC,KACd3L,QAAQ6L,YAAYD,UACVjL,MAGR0K,cACZC,UAAUjF,KAAK,CACXgC,KAAMqD,KACNhL,EAAGA,GAAK0K,aAGZM,KAAOC,MAGPD,KAAOE,YAKfN,UAAUjF,KAAK,CACXgC,KAAMqD,KACNhL,EAAGA,GAAK0K,iBAIRU,QAAUpL,EAAI6K,UAElBD,UAAUzG,SAAQ,SAASkH,cAGnBC,SAAWb,aAAeW,QAAU,EAExC9L,QAAQ4F,SAASmG,SAAS1D,KAAM5H,EAAGsL,SAASrL,EAAIsL,sBAO/CC,iBAKc,IAJFjL,YAAYkL,QAAO,SAAS/D,cAClCA,MAAM3C,SACdjB,SAEsBrD,kBAAoBgI,KAAKZ,UAAYpH,mBAAqB,IAC5EgI,KAAK3I,QAAUA,OAASX,OAAO4F,OAClC6B,YAvjCRhI,EAAE,mCAAmC8M,GAAG,SAAS,WACzChL,cACAA,cAAe,EACfS,eAEAU,gBA2ZRwG,UAAUsD,UAAUC,MAAQ,kBACjBnD,KAAKH,KAAOG,KAAKvI,OAG5BmI,UAAUsD,UAAUE,OAAS,kBAClBpD,KAAKF,IAAME,KAAKtI,QAG3BkI,UAAUsD,UAAUG,SAAW,SAASC,cAC7BA,MAAM/L,EAAIyI,KAAKH,MAClByD,MAAM/L,EAAIyI,KAAKmD,SACfG,MAAM9L,EAAIwI,KAAKF,KACfwD,MAAM9L,EAAIwI,KAAKoD,UAGvBxD,UAAUsD,UAAUrB,UAAY,SAAS0B,mBACtBA,UAAU1D,KAAOG,KAAKmD,SACjCI,UAAUJ,QAAUnD,KAAKH,MACzB0D,UAAUzD,IAAME,KAAKoD,UACrBG,UAAUH,SAAWpD,KAAKF,MAuBlCC,WAAWmD,UAAUjD,UAAY,SAASrE,YACjCoE,KAAKnE,aACDA,MAAQ,IAAIC,YAEhBD,MAAMD,IAAMA,IACVoE,KAAKnE,OAGhBkE,WAAWmD,UAAU7F,OAAS,gBACrB6C,SAAS3I,GAAKyI,KAAK/B,UAAU1G,EAAIyI,KAAK9B,UAAU3G,OAChD2I,SAAS1I,GAAKwI,KAAK/B,UAAUzG,EAAIwI,KAAK9B,UAAU1G,OAChDD,GAAKyI,KAAKE,SAAS3I,OACnBC,GAAKwI,KAAKE,SAAS1I,OACnB0I,SAAS1I,GAAKwI,KAAKG,WACnBD,SAAS3I,GAAKyI,KAAKG,OAG5BJ,WAAWmD,UAAU7G,KAAO,SAASvF,SACjCA,QAAQ0M,UAAUxD,KAAKnE,MAAOmE,KAAKzI,EAAGyI,KAAKxI,EAAGwI,KAAKnE,MAAMpE,MAAOuI,KAAKnE,MAAMnE,SAG/EqI,WAAWmD,UAAUvB,QAAU,kBACpB,IAAI/B,UAAUI,KAAKzI,EAAGyI,KAAKxI,EAAGwI,KAAKnE,MAAMpE,MAAOuI,KAAKnE,MAAMnE,SAGtEqI,WAAWmD,UAAUtC,IAAM,gBAClBtE,OAAQ,GAiBjByB,OAAOmF,UAAYO,OAAOC,OAAO3D,WAAWmD,WAC5CnF,OAAOmF,UAAU7F,OAAS,SAASH,SAC3BrF,WAAaD,aACToI,KAAKzI,EAAIyI,KAAKI,MAAM7I,EAAKyI,KAAKnE,MAAMpE,MACpCf,OAAOuH,UAAU1G,EAAI,EACdyI,KAAKzI,EAAIyI,KAAKI,MAAM7I,EAC3Bb,OAAOuH,UAAU1G,GAAK,EAEtBb,OAAOuH,UAAU1G,EAAI,EAErByI,KAAKxI,EAAIwI,KAAKI,MAAM5I,EAAKwI,KAAKnE,MAAMnE,OACpChB,OAAOuH,UAAUzG,EAAI,EACdwI,KAAKxI,EAAIwI,KAAKI,MAAM5I,EAC3Bd,OAAOuH,UAAUzG,GAAK,EAEtBd,OAAOuH,UAAUzG,EAAI,GAG7BuI,WAAWmD,UAAU7F,OAAOI,KAAKuC,KAAM9C,QACnC8C,KAAKzI,EAAI2F,OAAO3F,EAAIyI,KAAKnE,MAAMpE,WAC1BF,EAAI2F,OAAOzF,MACTuI,KAAKzI,EAAI2F,OAAOzF,aAClBF,EAAI2F,OAAO3F,EAAIyI,KAAKnE,MAAMpE,OAE/BuI,KAAKxI,EAAI0F,OAAO1F,OACXA,EAAI0F,OAAO1F,EACTwI,KAAKxI,EAAI0F,OAAOxF,OAASsI,KAAKnE,MAAMnE,cACtCF,EAAI0F,OAAOxF,OAASsI,KAAKnE,MAAMnE,SAI5CqG,OAAOmF,UAAUS,MAAQ,WACrBzL,UAAU,SACVjB,YAAY2M,QAAQ,IAAI7C,MAAMrK,OAAOa,EAAGb,OAAOc,GAAG,EAAM,KACxDqM,UAAW,GAGf9F,OAAOmF,UAAUtC,IAAM,WACnBb,WAAWmD,UAAUtC,IAAInD,KAAKuC,MAC9B9H,UAAU,aACV4J,MAAM9B,KAAKzI,EAAIyI,KAAKnE,MAAMpE,MAAQ,EAAGuI,KAAKxI,EAAIwI,KAAKnE,MAAMnE,OAAS,EAAG,IAAK,gBACrEuF,UAAYlG,MA1VjBT,KAAKmH,KAAK,CAAC,CACPC,WAAY,4BACZC,KAAM,CAACC,WAAYpH,SAAUO,MAAOuE,KAAKwI,MAAM/M,QAC/C8G,KAAMxH,aAAayH,aAEvB3D,cAyVJ4D,OAAOmF,UAAUzB,QAAU,SAASsC,MAC5BA,KAAKzH,QACD0D,KAAKjD,OAAS,OACT6D,YAEA7D,QACL+E,MAAM9B,KAAKzI,EAAIyI,KAAKnE,MAAMpE,MAAQ,EAAGuI,KAAKxI,EAAIwI,KAAKnE,MAAMnE,OAAS,EAAG,IAAK,cAetFsG,OAAOkF,UAAYO,OAAOC,OAAO3D,WAAWmD,WAC5ClF,OAAOkF,UAAU7F,OAAS,SAASH,QAC/BvG,OAAOkF,MAAMpE,MAAQH,YAAYG,MACjCd,OAAOkF,MAAMnE,OAASJ,YAAYI,OAClCqI,WAAWmD,UAAU7F,OAAOI,KAAKuC,KAAM9C,SA0B3CmD,MAAM6C,UAAYO,OAAOC,OAAO3D,WAAWmD,WAE3C7C,MAAM6C,UAAU7F,OAAS,SAASH,WAE1B8C,KAAKxI,EAAI0F,OAAOxF,OAAS,IAAMsI,KAAKxI,EAAoB,EAAhB0F,OAAOxF,OAAa,SACvDwG,UAAU3G,EAAkB,EAAdyI,KAAKM,YACnBpC,UAAU1G,EAAkB,EAAdwI,KAAKO,cAEnBrC,UAAU3G,EAAIyI,KAAKM,YACnBpC,UAAU1G,EAAIwI,KAAKO,QAG5BR,WAAWmD,UAAU7F,OAAOI,KAAKuC,KAAM9C,aAElCsD,gBAEDR,KAAKQ,eAAiB,SACjBvC,UAAU1G,EAAI+D,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,OAC9CgF,cAAsC,IAArB,EAAIlF,KAAKE,gBAG9BkF,WAAa7J,WAEdmJ,KAAKU,WAAa,GACdV,KAAKxI,EAAoB,GAAhB0F,OAAOxF,OAAc,CAC9BQ,UAAU,kBACN8L,MAAQ,IAAIjD,MAAMf,KAAKzI,EAAGyI,KAAKxI,GACnCwM,MAAM/F,UAAUzG,EAAI,EACpBwM,MAAMhD,UAAW,EACjB/J,YAAY2M,QAAQI,YACftD,WAAa,EAAIpF,KAAKE,UAAYwE,KAAKS,cAIhDT,KAAKzI,EAAI2F,OAAO3F,EAAIyI,KAAKnE,MAAMpE,WAC1BF,EAAI2F,OAAOzF,MACTuI,KAAKzI,EAAI2F,OAAOzF,aAClBF,EAAI2F,OAAO3F,EAAIyI,KAAKnE,MAAMpE,OAE/BuI,KAAKxI,EAAI0F,OAAOxF,OAASsI,KAAKnE,MAAMnE,QAAUsI,KAAK1D,aAC9CA,OAAQ,EACT0D,KAAKZ,SAAW,IAChBpH,mBAAqBgI,KAAKZ,SAC1BrI,OAAS,IAAOiJ,KAAKZ,UAGzB2D,eAAetF,KAAKuC,QAI5BK,MAAM6C,UAAU7G,KAAO,SAASvF,SAC5BiJ,WAAWmD,UAAU7G,KAAKoB,KAAKuC,KAAMlJ,SAErCA,QAAQyF,UAAY,UACpBzF,QAAQ0F,KAAO,iBACf1F,QAAQ2F,UAAY,SAEpBO,SAASlG,QAASkJ,KAAKb,MAAM,EAAM,GAAwB,GAApB7H,YAAYG,MAAauI,KAAKzI,EAAIyI,KAAKnE,MAAMpE,MAAQ,EAAGuI,KAAKxI,EAAI,IAG5G6I,MAAM6C,UAAUtC,IAAM,WAClBb,WAAWmD,UAAUtC,IAAInD,KAAKuC,MAC9B8B,MAAM9B,KAAKzI,EAAIyI,KAAKnE,MAAMpE,MAAOuI,KAAKxI,EAAIwI,KAAKnE,MAAMnE,OAAQ,GAAsB,IAAhBsI,KAAKZ,SAAiB,WAGzFrI,OAAyB,IAAhBiJ,KAAKZ,SAGdlH,UAAU,cAGdmI,MAAM6C,UAAUzB,QAAU,SAASsC,MAE/BA,KAAKnD,WACAA,OA4BT1B,QAAQgE,UAAYO,OAAOC,OAAOrD,MAAM6C,WAExChE,QAAQgE,UAAUtC,IAAM,WAGpBP,MAAM6C,UAAUtC,IAAInD,KAAKuC,MACzBW,eAGIX,KAAKZ,SAAW,GAChBjB,aAIRe,QAAQgE,UAAUzB,QAAU,SAASsC,MAC7B/D,KAAKZ,SAAW,GAChB2E,KAAKnD,WACAA,QAEL7J,OAAiC,KAAvBiJ,KAAKZ,SAAW,IAC1B2E,KAAKE,YAiBb5E,WAAW6D,UAAYO,OAAOC,OAAOrD,MAAM6C,WAE3C7D,WAAW6D,UAAUtC,IAAM,WACvBP,MAAM6C,UAAUtC,IAAInD,KAAKuC,MACrBA,KAAKZ,SAAW,IAChBpH,mBAAqBgI,KAAKZ,WAEzBY,KAAKV,QAA4B,IAAlBU,KAAKZ,UAAmBY,KAAKZ,UAAY,GAAMY,KAAKZ,SAAW,GAAKpH,mBAAqB,KACzG2I,eACAxC,cAIRkB,WAAW6D,UAAUzB,QAAU,SAASsC,MAChC/D,KAAKZ,UAAY,GAAMY,KAAKZ,SAAW,IAAMY,KAAKV,QAClDyE,KAAKnD,WACAA,QAEL7J,OAAiC,KAAvBiJ,KAAKZ,SAAW,IAC1B2E,KAAKE,YAyBbvE,WAAWwD,UAAYO,OAAOC,OAAOrD,MAAM6C,WAE3CxD,WAAWwD,UAAUtC,IAAM,WACvB5I,mBAAqBgI,KAAKZ,cAErBA,SAAW,EAChBiB,MAAM6C,UAAUtC,IAAInD,KAAKuC,OAG7BN,WAAWwD,UAAUzB,QAAU,SAASsC,SAChCA,KAAKzH,OAAS0D,KAAK1D,SACfvE,WAAaiI,KAAKa,OAAQ,CAI1B9J,OAAyB,IAAhBiJ,KAAKZ,SAAkB,EAEhC2E,KAAKnD,WACAA,UACDsD,OAAS,EACbpM,YAAY6D,SAAQ,SAASwI,OACrBA,MAAMtD,QAAU9I,UAChBoM,MAAMvD,MAENuD,MAAM7H,OACN4H,YAIJA,QAAU,GACV/F,iBAGApG,UAAYiI,KAAKa,OACjBkD,KAAKE,WAELF,KAAKnD,WACAwD,aACLrM,SAAWiI,KAAKa,SAMhCnB,WAAWwD,UAAUkB,WAAa,WAC9BtM,YAAY6D,SAAQ,SAASwI,OACzBA,MAAME,kBAENrE,KAAKP,UACAQ,UAAU,kCAEVA,UAAU,oCAEda,cAAe,GAGxBpB,WAAWwD,UAAUmB,aAAe,WAC5BrE,KAAKc,eACDd,KAAKP,UACAQ,UAAU,0BAEVA,UAAU,6BAGlBa,cAAe,GAgBxBC,MAAMmC,UAAYO,OAAOC,OAAO3D,WAAWmD,WAE3CnC,MAAMmC,UAAU7F,OAAS,SAASH,QAC9B6C,WAAWmD,UAAU7F,OAAOI,KAAKuC,KAAM9C,SACnC8C,KAAKzI,EAAI2F,OAAO3F,EAAIyI,KAAKnE,MAAMpE,OAC/BuI,KAAKzI,EAAI2F,OAAOzF,OAChBuI,KAAKxI,EAAI0F,OAAO1F,EAAIwI,KAAKnE,MAAMnE,QAC/BsI,KAAKxI,EAAI0F,OAAOxF,eACX4E,OAAQ,QAEZ4D,SAAS1I,EAAIwI,KAAKiB,WAAajB,KAAK/B,UAAUzG,GAGvDuJ,MAAMmC,UAAUe,QAAU,gBACjBpI,MAAQmE,KAAKC,UAAU,2BACvBhC,UAAUzG,IAAM,OAChBwJ,UAAYhB,KAAKgB,SACtB9I,UAAU,YAqBdgJ,SAASgC,UAAYO,OAAOC,OAAO3D,WAAWmD,WAE9ChC,SAASgC,UAAU7F,OAAS,SAASH,QACjC6C,WAAWmD,UAAU7F,OAAOI,KAAKuC,KAAM9C,SACnC8C,KAAKzI,EAAI2F,OAAO3F,EAAIyI,KAAKvI,OACzBuI,KAAKzI,EAAI2F,OAAOzF,OAChBuI,KAAKxI,EAAI0F,OAAO1F,EAAIwI,KAAKtI,QACzBsI,KAAKxI,EAAI0F,OAAOxF,eACX4E,OAAQ,QAEZ8E,YACDpB,KAAKoB,UAA6B,GAAhB9F,KAAKE,SAAiB,SACnCc,OAAQ,IAIrB4E,SAASgC,UAAUvB,QAAU,kBAClB,IAAI/B,UAAUI,KAAKzI,EAAGyI,KAAKxI,EAAGwI,KAAKvI,MAAOuI,KAAKtI,SAG1DwJ,SAASgC,UAAU7G,KAAO,SAASvF,SAC/BA,QAAQyF,UAAYyD,KAAKmB,OACzBrK,QAAQwN,SAAStE,KAAKzI,EAAGyI,KAAKxI,EAAGwI,KAAKvI,MAAOuI,KAAKtI,QAClDZ,QAAQyN,UAeZnH,KAAK8F,UAAYO,OAAOC,OAAO3D,WAAWmD,WAE1C9F,KAAK8F,UAAU7F,OAAS,SAASH,QAC7B6C,WAAWmD,UAAU7F,OAAOI,KAAKuC,KAAM9C,QACnC8C,KAAKxI,EAAI0F,OAAOxF,cACX4E,OAAQ,IAIrBc,KAAK8F,UAAU7G,KAAO,SAASvF,SAC3BA,QAAQyF,UAAY,UACpBzF,QAAQwN,SAAStE,KAAKzI,EAAGyI,KAAKxI,EAAGwI,KAAKvI,MAAOuI,KAAKtI,QAClDZ,QAAQyN,cAyIRV,UAAW,WAMNhJ,YAAY2J,IACgC,IAA7C,CAAC,GAAI,GAAI,GAAI,GAAI,IAAIC,QAAQD,EAAEE,WAC/BF,EAAEG,iBACgB,KAAdH,EAAEE,SACF1J,qBASHF,cAAc0J,GACfA,EAAEI,SAAWnO,OACbuE,oBAQCD,aAAayJ,GACdA,EAAEI,SAAWnO,OACbuE,oBAQCqD,QAAQmG,IACoC,IAA7C,CAAC,GAAI,GAAI,GAAI,GAAI,IAAIC,QAAQD,EAAEE,WAC/BF,EAAEG,iBACgB,KAAdH,EAAEE,SAAkBhO,OAAO4F,OAASuH,SACpCnN,OAAOiN,QACc,KAAda,EAAEE,QACThO,OAAOuH,UAAU1G,GAAK,EACD,KAAdiN,EAAEE,QACThO,OAAOuH,UAAUzG,GAAK,EACD,KAAdgN,EAAEE,QACThO,OAAOuH,UAAU1G,EAAI,EACA,KAAdiN,EAAEE,UACThO,OAAOuH,UAAUzG,EAAI,aASxB4G,MAAMoG,GACO,KAAdA,EAAEE,QACFb,UAAW,GAC6B,IAAjC,CAAC,GAAI,IAAIY,QAAQD,EAAEE,SAC1BhO,OAAOuH,UAAU1G,EAAI,GACmB,IAAjC,CAAC,GAAI,IAAIkN,QAAQD,EAAEE,WAC1BhO,OAAOuH,UAAUzG,EAAI,YAQpB+G,UAAUiG,GACXA,EAAEI,SAAWnO,QACUC,OAAOiL,UAAU0B,SAAS,CAAC9L,EAAGiN,EAAEK,QAASrN,EAAGgN,EAAEM,WAC7CpO,OAAO4F,OAC3B5F,OAAOiN,QAEN9L,YACDnB,OAAO0J,MAAM7I,EAAIiN,EAAEK,QACnBnO,OAAO0J,MAAM5I,EAAIgN,EAAEM,QACnBjN,WAAY,aAQfyG,UACL5H,OAAOuH,UAAU1G,EAAI,EACrBb,OAAOuH,UAAUzG,EAAI,EACrBK,WAAY,WAOP2G,UAAUgG,GACf9N,OAAO0J,MAAM7I,EAAIiN,EAAEK,QACnBnO,OAAO0J,MAAM5I,EAAIgN,EAAEM,iBAOdjG,UAAUkG,OACXA,MAAMH,SAAWnO,OACjBsO,MAAMJ,0BAQLlG,WAAW+F,GACZA,EAAEI,SAAWnO,QACTC,OAAO4F,OAASkI,EAAEQ,QAAQ3J,OAAS,EACnC3E,OAAOiN,SAEP/L,WAAY,EACZ+G,UAAU6F,IAGdA,EAAEG,2BAQDjG,SAAS8F,GACW,IAArBA,EAAEQ,QAAQ3J,SACVzD,WAAY,GAEhBlB,OAAOuH,UAAU1G,EAAI,EACrBb,OAAOuH,UAAUzG,EAAI,EAEjBgN,EAAEI,SAAWnO,OACb+N,EAAEG,0BAQDhG,UAAU6F,OACXS,KAAOT,EAAEI,OAAOM,wBAEhB3N,EAAIiN,EAAEQ,QAAQ,GAAGG,MAAQF,KAAKpF,KAC9BrI,EAAIgN,EAAEQ,QAAQ,GAAGI,QAAUH,KAAKnF,IAEpCxG,OAAO7C,MAAQA,MACfC,OAAO0J,MAAM7I,EAAIA,EACjBb,OAAO0J,MAAM5I,EAAIA,EAEbgN,EAAEI,SAAWnO,OACb+N,EAAEG,uBAiDH,CACHU,cAlBkBC,EAAGC,KACrBhP,UAAY+O,EACZ9O,SAAW+O,IACPnN,SAASwG,mBACTxG,SAASwG,iBAAiB,mBAAoBzF,UAAU,GACxDf,SAASwG,iBAAiB,qBAAsBzF,UAAU,GAC1Df,SAASwG,iBAAiB,sBAAuBzF,UAAU,GAC3Df,SAASwG,iBAAiB,yBAA0BzF,UAAU,IAElE1C,MAAQ2B,SAASC,eAAe,qBAChCvB,QAAUL,MAAM+O,WAAW,MAC3B9M,cACA9B,SAAWqF,aAAY,WAnnCvBnF,QAAQqF,UAAU,EAAG,EAAG7E,YAAYG,MAAOH,YAAYI,QAEvDZ,QAAQyF,UAAY,UACpBzF,QAAQ0F,KAAO,iBACf1F,QAAQ2F,UAAY,SAEF,OAAdlG,WAAsBA,UAAU8E,OAAS,GACzCvE,QAAQ4F,SAASC,EAAEC,KAAKC,WAAW,eAAgB,gBAAiBvF,YAAYG,MAAQ,EAAGH,YAAYI,OAAS,GAChHyC,cAEArD,QAAQ4F,SAASC,EAAEC,KAAKC,WAAW,YAAa,gBAAiBvF,YAAYG,MAAQ,EAAGH,YAAYI,OAAS,KA2mC9G"}